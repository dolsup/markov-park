{
  "name": "markov-kor",
  "description": "a fork of node-markov for generation of korean text",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/dolsup/node-markov-kor.git"
  },
  "main": "./index.js",
  "directories": {
    "lib": "."
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "deck": ">=0.0.3",
    "lazy": ">=1.0.3",
    "hashish": ">=0.0.2"
  },
  "license": "MIT",
  "author": {
    "name": "Jiwon Choi",
    "email": "1890mah@gmail.com",
    "url": "dolsup.github.io"
  },
  "bugs": {
    "url": "https://github.com/dolsup/node-markov-kor/issues"
  },
  "homepage": "https://github.com/dolsup/node-markov-kor#readme",
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "readme": "# markov-kor\n\n무작위 텍스트의 생성을 위한 마르코프 체인\n\na fork of [node-markov](https://github.com/substack/node-markov)\n\n## 예시 / Example\n[markov-park](https://github.com/dolsup/markov-park).js:\n```js\n    var fs = require('fs'); \n    var markov = require('node-markov-kor');\n    \n    var m = markov();\n    var s = fs.createReadStream(__dirname + '/corpus.txt');\n    m.seed(s, function () {\n            console.log( m.generateText() );\n    });\n```\n출력:\n```sh\n    $ node markov-park.js\n    그 배기 가스라든가 이러한 것에서 커다란 부담을 갖지 않도록 정부가 구조 수색과 조속한 사고 수습을 위해 많은 평가가 있기 때문에 이 두가지를 동시에 생각해야만 바른 평가가 있는 역량을 갖고 정치권, 정부 모두가 안전을 우리가 같이 지키자 하는 것은 자라나는 세대들에게 우리가 최선을 다하면 된다는 의미죠?\n```\n\n## node-markov에서 달라진 점\n- 알파벳, 숫자 이외의 모든 문자를 걸러내지 않습니다.\n- `next.word`를 `res`에 unshift가 아니라 push합니다. 버그였는진 모르겠지만 이게 결과가 좋습니다.\n- 한 줄에 한 문장씩 코퍼스를 넣지 않았어도 문장 단위로 결과가 나옵니다.\n- 끊겨서 나오지 않았으면 하는 것은 `_`로 이어 주면 출력 시에는 공백으로 치환되어 나옵니다.\n- `generateText` 메소드가 추가되었습니다. 어절 배열이 아닌 문자열로 join되어 나옵니다.\n\n\n## 메소드 / Methods\n\nmarkov(order)\n-------------\norder 차의 새 마르코프 객체를 생성한다. 기본값은 1차.\n\n\n.seed(s, cb)\n------------\n\n문자열이나 스트림 s를 마르코프 객체의 시드값으로 쓴다.\n\nIf `s` is a string, transition probabilities will be updated for every grouping\nof the previously specified order with dangling links at the front and end in\nthe appropriate direction.\n\nIf `s`s is a stream, data events will be line-buffered and fed into `.seed()` again\nline-by-line.\n\nIf `cb` is specified it will fire once the seed text is fully ingested.\n\n.generateText(text, limit)\n--------------------------\n\n코퍼스를 바탕으로 텍스트를 생성한다. `text`는 지정할 시작 노드, `limit`는 연결할 노드의 최대 개수.\n\n.search(text)\n-------------\n\nSearch for and return some key found in the text body `text`.\n\nReturn `undefined` if no matches were found.\n\n.pick()\n-------\n\nChoose a key at random.\n\n.next(key)\n----------\n\nFind a key likely to follow after `key`.\n\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\n`key` as it appeared in the seed text.\n\n.prev(key)\n----------\n\nFind a key likely to come before `key`.\n\nReturns a hash with keys `key`, the canonical next key and `word`, a raw form of\n`key` as it appeared in the seed text.\n\n.forward(key, limit)\n--------------------\n\nGenerate a markov chain forward starting at `key` and returning an array of the\nraw word forms along the way.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.backward(key, limit)\n---------------------\n\nGenerate a markov chain backward starting at `key` and returning an array of the\nraw word forms along the way.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.fill(key, limit)\n-----------------\n\nGenerate a markov chain in both directions starting at `key`. Return an array of\nthe raw word forms along the way including the raw word form of the supplied\n`key`.\n\nStop when the traversal hits a terminal entry or when limit words have been\ngenerated if limit is specified.\n\n.respond(text, limit)\n---------------------\n\nSearch for a starting key in `text` and then call `.fill(key, limit)` on it.",
  "readmeFilename": "README.md",
  "gitHead": "01ab4898eb756d73f9043433f678735dc2d9a6c7",
  "_id": "markov-kor@0.0.2",
  "_shasum": "9ee20f978faaf370270fbf98e9d37bf5749a7803",
  "_from": "markov-kor@0.0.2"
}
